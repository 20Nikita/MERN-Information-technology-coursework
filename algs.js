const WS_Clock = (РазмерБуффера, КоличествоЭлементов, ВЗД,
    РабочееМножество, СбросОбращения, Содержимое) =>{
    let массив = {
        ИзмененноеВремяОбращения: [],
        ВремяОбращения: [],
        НомерСтраницы: [],
        Буффер: [],
        Pf: [],
        Стили: []
    }

    let РасстояниеДоДырки = 0
    
    for (let index = 0; index < РазмерБуффера; index++) {
        let Буффер = {
            ТекущаяСтраница: [],
            БитОбращения: [],
            БитИзменения: [],
            ВремяПоследнегоИзменения: []
        }
        массив.Буффер.push(Буффер)
    }
    const добавить = () => {
        массив.ИзмененноеВремяОбращения.push(-1)
        массив.ВремяОбращения.push(-1)
        массив.НомерСтраницы.push(0)
        for (let j = 0; j < РазмерБуффера; j++) {
            массив.Буффер[j].ТекущаяСтраница.push(-1)
            массив.Буффер[j].БитОбращения.push(0)
            массив.Буффер[j].БитИзменения.push(0)
            массив.Буффер[j].ВремяПоследнегоИзменения.push(0)
        }
        
        массив.Pf.push(-1)
    }
    const скопировать = (столбец,i) => {
        добавить()
            массив.ИзмененноеВремяОбращения[столбец] = Содержимое[i].ВремяОбращения + РасстояниеДоДырки
            массив.НомерСтраницы[столбец] = Содержимое[i].НомерСтраницы
        for (let j = 0; j < РазмерБуффера; j++) {
            массив.Буффер[j].ТекущаяСтраница[столбец] = массив.Буффер[j].ТекущаяСтраница[столбец-1]
            массив.Буффер[j].БитОбращения[столбец] = массив.Буффер[j].БитОбращения[столбец-1]
            массив.Буффер[j].БитИзменения[столбец] = массив.Буффер[j].БитИзменения[столбец-1]
            массив.Буффер[j].ВремяПоследнегоИзменения[столбец] = массив.Буффер[j].ВремяПоследнегоИзменения[столбец-1]
        }
    }
    const Сброс = (столбец,i) => {
        for (let temp = массив.ВремяОбращения[столбец-1]; temp < Содержимое[i].ВремяОбращения; temp++) {
            if(temp % СбросОбращения === 0) {
                скопировать(столбец,i)
                массив.ИзмененноеВремяОбращения[столбец] = temp+РасстояниеДоДырки
                массив.ВремяОбращения[столбец] = temp
                массив.НомерСтраницы[столбец] = -1
                массив.Стили.push([столбец,2,2])
                for (let j = 0; j < РазмерБуффера; j++) {
                    if(массив.Буффер[j].БитОбращения[столбец] === 1){
                        массив.Буффер[j].БитОбращения[столбец] = 0
                        массив.Буффер[j].ВремяПоследнегоИзменения[столбец] = temp
                    }
                }
                столбец+=1
                return столбец
            }
        }
        return столбец
    }
    добавить()
    массив.ИзмененноеВремяОбращения[0] = Содержимое[0].ВремяОбращения
    массив.ВремяОбращения[0] = Содержимое[0].ВремяОбращения
    массив.НомерСтраницы[0] = Содержимое[0].НомерСтраницы
    массив.Буффер[0].ТекущаяСтраница[0] = Содержимое[0].НомерСтраницы
    массив.Буффер[0].БитОбращения[0] = 1
    массив.Буффер[0].БитИзменения[0] = Содержимое[0].Запись
    массив.Буффер[0].ВремяПоследнегоИзменения[0] = 0
    массив.Pf[0] = 1
    массив.Стили.push([0,3,1])
    let k = 1
    let m = 1
    for (let i = 1; i < РазмерБуффера ; i++) {
        if(КоличествоЭлементов <= m || КоличествоЭлементов === 1)
            break
        console.log("до",массив.ВремяОбращения)
        k = Сброс(k,m)
        console.log(массив.ВремяОбращения)
        массив.ВремяОбращения[k] = Содержимое[m].ВремяОбращения
        массив.Pf[k] = 0
        скопировать(k,m)
        массив.Стили.push([k,i*4+3,1])
        let тест = true
        for (let j = 0; j < i ; j++) {
            if (массив.Буффер[j].ТекущаяСтраница[k] === Содержимое[m].НомерСтраницы)
                тест = false
        }
        if (тест){
            массив.Буффер[i].ТекущаяСтраница[k] = Содержимое[m].НомерСтраницы
            массив.Буффер[i].БитОбращения[k] = 1
            массив.Буффер[i].БитИзменения[k] = Содержимое[m].Запись
            массив.Буффер[i].ВремяПоследнегоИзменения[m] = 0
            массив.Pf[k] = 1
        } else {i-=1}
        k += 1
        m += 1
    }

    let PF = []
    let столбец = k
    let Clock = 0
    k = 0
    for (let i = m; i < КоличествоЭлементов; i++) {
        let круг = true
        столбец = Сброс(столбец,i)
        if(РасстояниеДоДырки<0)РасстояниеДоДырки=0
        if(круг){
            for (let j = 0; j < РазмерБуффера; j++) {
                if(массив.Буффер[j].ТекущаяСтраница[столбец-1] === Содержимое[i].НомерСтраницы){
                    скопировать(столбец,i)
                    массив.Стили.push([столбец,Clock*4+3,1])
                    массив.ВремяОбращения[столбец] = Содержимое[i].ВремяОбращения
                    массив.НомерСтраницы[столбец] = Содержимое[i].НомерСтраницы
                    массив.Буффер[j].БитОбращения[столбец] = 1
                    массив.Pf[столбец] = 0
                    столбец+=1
                    круг = false
                }
            }
        }

        if(круг){
            for (let j = 0; j < РазмерБуффера; j++) {
                (Clock + j < РазмерБуффера)? k = Clock + j : k = (Clock + j) - РазмерБуффера
                скопировать(столбец,i)
                массив.Стили.push([столбец,k*4+3,1])
                if(массив.Буффер[k].БитОбращения[столбец] === 0 &&
                массив.Буффер[k].БитИзменения[столбец] === 0 &&
                ((массив.ИзмененноеВремяОбращения[столбец] - массив.Буффер[k].ВремяПоследнегоИзменения[столбец]) > РабочееМножество)){
                    массив.ВремяОбращения[столбец] = Содержимое[i].ВремяОбращения
                    массив.НомерСтраницы[столбец] = Содержимое[i].НомерСтраницы
                    массив.Буффер[k].ТекущаяСтраница[столбец] = Содержимое[i].НомерСтраницы
                    массив.Буффер[k].БитОбращения[столбец] = 1
                    массив.Буффер[k].БитИзменения[столбец] = Содержимое[i].Запись
                    круг = false
                    массив.Pf[столбец] = 1
                    столбец +=1
                    break
                }
                столбец +=1
            }
            k + 1 < РазмерБуффера? Clock = k + 1 : Clock = 0
            let буд = -1
            if(круг){
                for (let j = 0; j < РазмерБуффера; j++) {
                    (Clock + j < РазмерБуффера)? k = Clock + j : k = (Clock + j) - РазмерБуффера
                    скопировать(столбец,i)
                    массив.Стили.push([столбец,k*4+3,1])
                    if (буд!==-1){
                        массив.Буффер[буд].БитИзменения[столбец] = 0
                        буд = -1
                    }
                    if(массив.Буффер[k].БитИзменения[столбец] === 0) {
                        массив.ВремяОбращения[столбец] = Содержимое[i].ВремяОбращения
                        массив.НомерСтраницы[столбец] = Содержимое[i].НомерСтраницы
                        массив.Буффер[k].ТекущаяСтраница[столбец] = Содержимое[i].НомерСтраницы
                        массив.Буффер[k].БитОбращения[столбец] = 1
                        массив.Буффер[k].БитИзменения[столбец] = Содержимое[i].Запись
                        круг = false
                        массив.Pf[столбец] = 1
                        столбец +=1
                        break
                    } else {
                        буд = k
                        массив.Стили.push([столбец,k*4+5,3])
                    }
                    столбец +=1
                }
                
            }
            k + 1 < РазмерБуффера? Clock = k + 1 : Clock = 0
            if(круг){
                РасстояниеДоДырки += Number(ВЗД)
                PF.push(столбец)
                скопировать(столбец,i)
                массив.Стили.push([столбец,Clock*4+3,1])
                массив.Стили.push([столбец,1,3])
                if (буд !== -1){
                    массив.Буффер[буд].БитИзменения[столбец] = 0
                    буд = -1
                }
                массив.ВремяОбращения[столбец] = Содержимое[i].ВремяОбращения
                массив.НомерСтраницы[столбец] = Содержимое[i].НомерСтраницы
                массив.Буффер[Clock].ТекущаяСтраница[столбец] = Содержимое[i].НомерСтраницы
                массив.Буффер[Clock].БитОбращения[столбец] = 1
                массив.Буффер[Clock].БитИзменения[столбец] = Содержимое[i].Запись
                массив.Pf[столбец] = 1
                столбец +=1
                Clock + 1 < РазмерБуффера? Clock = Clock + 1 : Clock = 0
            }
        }
    }
    for (let i = PF[0]; i < столбец-1; i++) {
        let f = 1
        for (let j = 0; j < PF.length; j++)
            if (i+1===PF[j]) f=0
        if(f) 
            if(массив.ВремяОбращения[i]!==-1)
                массив.ИзмененноеВремяОбращения[i+1] = массив.ИзмененноеВремяОбращения[i] + 1
            else массив.ИзмененноеВремяОбращения[i+1] = массив.ИзмененноеВремяОбращения[i]
        else {
            массив.ИзмененноеВремяОбращения[i+1] = массив.ИзмененноеВремяОбращения[i] + Number(ВЗД)
            if(массив.ИзмененноеВремяОбращения[i] < массив.ВремяОбращения[i+1]) {
                массив.ИзмененноеВремяОбращения[i] = массив.ВремяОбращения[i+1]
                k = i-1
                while(!f){
                    if (массив.ВремяОбращения[k] !== -1)
                        массив.ИзмененноеВремяОбращения[k] = массив.ВремяОбращения[k]
                    else
                        массив.ИзмененноеВремяОбращения[k] = массив.ИзмененноеВремяОбращения[k+1]
                    k--
                    if(массив.ИзмененноеВремяОбращения[k] >= массив.ВремяОбращения[k] &&
                        массив.ВремяОбращения[k] !== -1)
                        f = 1
                }
            }
        }
        if(массив.ИзмененноеВремяОбращения[i+1] < массив.ВремяОбращения[i+1]){
            k = i+1
            while(f){
                if (массив.ВремяОбращения[k] !== -1)
                    массив.ИзмененноеВремяОбращения[k] = массив.ВремяОбращения[k]
                else
                    массив.ИзмененноеВремяОбращения[k] = массив.ИзмененноеВремяОбращения[k+1]
                k--
                if(массив.ИзмененноеВремяОбращения[k] >= массив.ВремяОбращения[k] &&
                    массив.ВремяОбращения[k] !== -1)
                    f = 0
            }
        }
    }
    return массив
}

const fifo = (РазмерБуффера, Содержимое) =>{
    let f = 0
    let массив = {}
    массив.НомерСтраницы = []
    массив.Буффер = []
    массив.Pf = []
 
    for (let index = 1; index <= РазмерБуффера; index++)
        массив.Буффер.push([index])
    массив.Pf.push(1)
    for (let j = 0; j < Содержимое.length; j++){
        массив.НомерСтраницы.push(Содержимое[j].НомерСтраницы)
        for (let index = 0; index < РазмерБуффера; index++)
            массив.Буффер[index].push(-1)}
    for (let index = 0; index < РазмерБуффера; index++)
        массив.Буффер[0][1]=массив.НомерСтраницы[0]

    for (let i = 2; i <= Содержимое.length; i++) {
        f = 0
        for (let j = 0; j < РазмерБуффера; j++){
            if(массив.Буффер[j][i-1] === массив.НомерСтраницы[i-1]){
                f = 1
            }
        }
        if(!f){
            массив.Буффер[0][i] = массив.НомерСтраницы[i-1]
            for (let j = 1; j < РазмерБуффера; j++)
                массив.Буффер[j][i] = массив.Буффер[j-1][i-1]
            массив.Pf.push(1)
        } else{
            for (let j = 0; j < РазмерБуффера; j++)
                массив.Буффер[j][i] = массив.Буффер[j][i-1]
            массив.Pf.push(0)
        }
    }
    return массив
}

module.exports = {
    fifo: fifo,
    WS_Clock: WS_Clock
}